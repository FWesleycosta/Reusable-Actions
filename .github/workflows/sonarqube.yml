name: 'Sonarqube Scan'

on:
  workflow_call:
    inputs:
      sonarqube_token:
        description: 'Sonarqube token'
        required: true
        type: string
      sonarqube_url:
        description: 'Sonarqube URL'
        required: true
        type: string
      sonarqube_project_key:
        description: 'Sonarqube project key'
        required: true
        type: string
      sonarqube_organization:
        description: 'Sonarqube organization'
        required: true
        type: string

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache SonarQube scanner
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache
          restore-keys: |
            ${{ runner.os }}-sonar-cache

      - name: Run SonarQube scan
        run: |
          sonar-scanner \
          -Dsonar.projectKey=${{ inputs.sonarqube_project_key }} \
          -Dsonar.organization=${{ inputs.sonarqube_organization }} \
          -Dsonar.host.url=${{ inputs.sonarqube_url }} \
          -Dsonar.login=${{ inputs.sonarqube_token }} \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.qualitygate.timeout=300

      - name: Publish SonarQube Quality Gate Result
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          SONARQUBE_URL=${{ inputs.sonarqube_url }}
          SONARQUBE_PROJECT_KEY=${{ inputs.sonarqube_project_key }}
          SONARQUBE_TOKEN=${{ inputs.sonarqube_token }}
          curl -sS ${SONARQUBE_URL}/api/qualitygates/project_status?projectKey=${SONARQUBE_PROJECT_KEY} \
            -u ${SONARQUBE_TOKEN}: \
            | jq '.'
